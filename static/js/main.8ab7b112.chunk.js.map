{"version":3,"sources":["components/TodoForm.js","App.js","registerServiceWorker.js","index.js"],"names":["TodoForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","responsible","description","priority","handleInputChange","bind","assertThisInitialized","handleSubmit","e","preventDefault","length","props","onAddTodo","setState","console","log","_e$target","target","value","name","defineProperty","react_default","a","createElement","className","onSubmit","type","onChange","placeholder","Component","App","todos","handleAddTodo","index","filter","i","todo","concat","toConsumableArray","_this2","map","todoInfo","key","onClick","removeTodo","href","components_TodoForm","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8ab7b112.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TodoForm extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      responsible: '',\r\n      description: '',\r\n      priority: 'Baja'\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!this.state.title.length) {\r\n      return console.log(\"%cAñadir título 😟\", \"color: red\");\r\n    }\r\n    if (!this.state.responsible.length) {\r\n      return console.log(\"%cAñadir responsable 😟\", \"color: red\");\r\n    }\r\n    this.props.onAddTodo(this.state);\r\n    this.setState({\r\n      title: '',\r\n      responsible: '',\r\n      description: '',\r\n      priority: 'Baja'\r\n    });\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    /*console.log(value, name);*/\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <form onSubmit={this.handleSubmit} className=\"card-body\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className=\"form-control\"\r\n              value={this.state.title}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Título\"\r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"responsible\"\r\n              className=\"form-control\"\r\n              value={this.state.responsible}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Responsable\"\r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Descripción\"\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <select\r\n                name=\"priority\"\r\n                className=\"form-control\"\r\n                value={this.state.priority}\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option className=\"text-secondary font-weight-bold\">Baja</option>\r\n              <option className=\"text-warning font-weight-bold\">Media</option>\r\n              <option className=\"text-danger font-weight-bold\">Alta</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"text-right\">\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n              Añadir\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n// data\r\nimport { todos } from './todos.json';\r\n\r\n// subcomponents\r\nimport TodoForm from './components/TodoForm';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      todos: todos\r\n    }\r\n    this.handleAddTodo = this.handleAddTodo.bind(this);\r\n  }\r\n\r\n  removeTodo(index) {\r\n    this.setState({\r\n      todos: this.state.todos.filter((e, i) => {\r\n        return i !== index\r\n      })\r\n    });\r\n    console.log(\"%cItem \" + index + \" borrado con éxito 👍\", \"color: green\");\r\n  }\r\n\r\n  handleAddTodo(todo) {\r\n    this.setState({\r\n      todos: [...this.state.todos, todo]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const todos = this.state.todos.map((todo, i) => {\r\n      let todoInfo = todo.priority;\r\n      if(todoInfo === \"Alta\"){\r\n        todoInfo = (\r\n          <span className=\"badge badge-pill badge-danger ml-2\">\r\n            {todo.priority}\r\n          </span>\r\n        )\r\n      }\r\n      if(todoInfo === \"Media\"){\r\n        todoInfo = (\r\n          <span className=\"badge badge-pill badge-warning ml-2\">\r\n            {todo.priority}\r\n          </span>\r\n        )\r\n      }\r\n      if(todoInfo === \"Baja\"){\r\n        todoInfo = (\r\n          <span className=\"badge badge-pill badge-secondary ml-2\">\r\n            {todo.priority}\r\n          </span>\r\n        )\r\n      }\r\n      return (\r\n        <div className=\"col-lg-6\" key={i}>\r\n          <div className=\"card mt-2 mb-2\">\r\n            <div className=\"card-body\">\r\n              <div className=\"card-title text-center\">\r\n                <h3>{todo.title}</h3>\r\n                <span>{todoInfo}</span>\r\n                {/*<Prioridad id={i}/>*/}\r\n              </div>\r\n              <div className=\"card-text\">\r\n                {todo.description}\r\n                <hr/>\r\n                <p className=\"text-left text-secondary font-weight-bold\"><small>{todo.responsible}</small></p>\r\n              </div>\r\n            </div>\r\n            <div className=\"card-footer text-right\">\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={this.removeTodo.bind(this, i)}>\r\n                Borrar\r\n              </button>\r\n              {/*Modal*/}\r\n              {/*<button className=\"btn btn-danger\"  data-toggle=\"modal\" data-target=\"#confirmacionModal\">\r\n                Borrar\r\n              </button>\r\n              <div className=\"modal fade\" id=\"confirmacionModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-dialog-centered modal-md\" role=\"document\">\r\n                  <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                      <h5 className=\"modal-title\" id=\"exampleModalLabel\">Mensaje de confirmación</h5>\r\n                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"modal-body text-left\">\r\n                      <p>¿Está seguro de esta acción?</p>\r\n                      <small className=\"text-danger font-weight-bold\">* Recuerde que no se puede recuperar esta información</small>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                      <button className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\r\n                      <button className=\"btn btn-danger\" onClick={this.removeTodo.bind(this, i)} data-dismiss=\"modal\">Borrar</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>*/}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    // RETURN THE COMPONENT\r\n    return (\r\n      <div>\r\n\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            Tareas\r\n            <span className=\"badge badge-pill badge-light ml-2\">\r\n              {this.state.todos.length}\r\n            </span>\r\n          </a>\r\n        </nav>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row mt-4\">\r\n\r\n            <div className=\"col-md-4 text-center\">\r\n              <TodoForm onAddTodo={this.handleAddTodo}></TodoForm>\r\n            </div>\r\n\r\n            <div className=\"col-md-8\">\r\n              <div className=\"row\">\r\n                {todos}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}